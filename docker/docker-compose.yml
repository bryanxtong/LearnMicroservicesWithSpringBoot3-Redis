version: "3.9"

services:
  frontend:
    image: challenges-frontend:1.0
    environment:
      - SPRING_CLOUD_GATEWAY_HOST=gateway
    ports:
      - '3000:80'
    networks:
      - microservices
  multiplication:
    image: multiplication:0.0.1-SNAPSHOT
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_REDIS_HOST=redis
      - SPRING_CLOUD_ZIPKIN_HOST=zipkin
    depends_on:
      - redis
      - consul-importer
    networks:
      - microservices
  gamification:
    image: gamification:0.0.1-SNAPSHOT
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_REDIS_HOST=redis
      - SPRING_CLOUD_ZIPKIN_HOST=zipkin
    depends_on:
      - redis
      - consul-importer
    networks:
      - microservices
  gateway:
    image: gateway:0.0.1-SNAPSHOT
    ports:
      - '8000:8000'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_REDIS_HOST=redis
      - SPRING_CLOUD_ZIPKIN_HOST=zipkin
    depends_on:
      - redis
      - consul-importer
    networks:
      - microservices
  logs:
    image: logs:0.0.1-SNAPSHOT
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_REDIS_HOST=redis
      - SPRING_CLOUD_ZIPKIN_HOST=zipkin
    depends_on:
      - redis
      - consul-importer
    networks:
      - microservices
  consul-importer:
    image: consul-importer:1.0
    depends_on:
      - consul-dev
    networks:
      - microservices
  consul-dev:
    image: hashicorp/consul:1.21.0
    container_name: consul
    ports:
      - '8500:8500'
      - '8600:8600/udp'
    command: 'agent -dev -node=learnmicro -client=0.0.0.0 -log-level=INFO'
    networks:
      - microservices
  redis:
    image: redis:7.0-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - microservices
  zipkin:
    image: 'openzipkin/zipkin'
    container_name: zipkin
    ports:
      - 9411:9411
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:9411/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - microservices
volumes:
  redis_data:
networks:
  microservices:
    driver: bridge