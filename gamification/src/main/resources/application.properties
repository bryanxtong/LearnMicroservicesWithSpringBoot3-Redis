spring.application.name=gamification
server.port=8081
# Gives us access to the H2 database web console
spring.h2.console.enabled=true
# Creates the database in a file
spring.datasource.url=jdbc:h2:file:~/gamification;AUTO_SERVER=TRUE
# Creates or updates the schema if needed
spring.jpa.hibernate.ddl-auto=update
# For educational purposes we will show the SQL in console
# spring.jpa.show-sql=true

redis.attempts.streamkey=attempts
redis.attempts.consumer.group=attempts-consumer-group
redis.attempts.consumer.name=attempts.consumer

#spring.config.import=optional:consul:
spring.cloud.compatibility-verifier.enabled=false

##working with default logback configuration for distributed tracing
logging.pattern.level=[${spring.application.name:-},%X{traceId:-},%X{spanId:-}]
logging.include-application-name=false
management.tracing.sampling.probability=1

spring.data.redis.host=${SPRING_CLOUD_REDIS_HOST:-localhost}
spring.data.redis.port=6379

management.zipkin.tracing.endpoint=http://${SPRING_CLOUD_ZIPKIN_HOST:localhost}:9411/api/v2/spans
spring.cloud.consul.host=${SPRING_CLOUD_CONSUL_HOST:localhost}
spring.cloud.consul.port=8500

#---
spring.config.activate.on-profile=docker

